{"version":3,"sources":["webpack:///./src/components/cornerCaseHandler.js","webpack:///./src/components/flashCue.js","webpack:///./src/templates/postcardTemplate.js"],"names":["CornerCaseHandler","props","state","alreadyFetched","g","currId","nextId","componentDidMount","this","setState","lastFetchedPage","cursor","p","length","id","loadMore","render","React","Component","FlashCue","wait","additionalWait","startShowingFlash","bind","zIndex","flashStarted","timer","setTimeout","updateState","flashCueShown","componentWillUnmount","clearTimeout","className","style","left","right","PostcardTemplate","handleKeyDown","event","keyCode","navigate","pageContext","prevId","getStatePassForPrev","getStatePassForNext","fullScreenChangeHandler","enterFullScreenAndRender","exitFullScreenAndRender","currentImageLoaded","nextImageLoaded","prevImageLoaded","placeholderTransitionDuration","zIndexes","getFromPassedStateOrDefault","isFullScreen","key","defaultVal","location","z","next","enterFullScreen","exitFullScreen","document","webkitIsFullScreen","mozFullScreen","msFullscreenElement","useOfQueryParams","window","href","includes","addEventListener","componentWillMount","split","replace","timer1","timer2","removeEventListener","c","Helmet","charSet","Consumer","globalState","image","to","title","position","height","width","theme","color","brand","primary","top","transform","highlight","bottom","onClick","fluid","originalImg","download","onLoad","src","initialRender","srcSet","sizes","alt","importance","tracedSVG","borderRadius","prefetchNext1","prefetchPrev","prefetchNext2"],"mappings":"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","file":"component---src-templates-postcard-template-js-7ad0306ea746a806f02b.js","sourcesContent":["import React from \"react\"\n\n/* This is used to handle a corner case where the user browses many photos and\n * then returns to the gallery by clicking 'x'. We're trying to anchor to the\n * thumbnail corresponding to the last photo that the user viewed. However,\n * it may be possible that the gallery hasn't yet fetched metadata for thumbnails\n * so far down. In this case, clicking 'x' causes the anchor link to fail and\n * the user encounters an unfamiliar scroll position. To avoid this issue we want\n * to keep gallery metadata up to date as we browse photos in postcard view. */\nexport class CornerCaseHandler extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            alreadyFetched: false,\n            g: props.g,\n            currId: props.currId,\n            nextId: props.nextId\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.alreadyFetched) {\n            return\n        }\n        this.setState({\n            alreadyFetched: true\n        })\n    \n        const g = this.state.g\n        const lastFetchedPage = \"page\" + (g.cursor-1)\n        if (!g[lastFetchedPage]) {\n            /* Another corner case: user enters postcard view without visiting gallery.\n             * Note that we are not properly handling this case (we should fetch enough\n             * metadata up to whichever image the user is looking at - instead we only\n             * fetch 1 page worth of metadata items per each photo that the user views.) */\n            g.loadMore()\n            return\n        }\n        const p = g[lastFetchedPage]\n        if (p.length === 0) {\n            /* This shouldn't happen but if it does we don't want to crash. */\n            return\n        }\n        if (p[p.length-1].id < (this.state.nextId)) {\n            /* If we are almost at the last photo with thumbnail metadata,\n            * then fetch more metadata (thumbnail _data_ will not be fetched yet). */\n            g.loadMore()\n        }\n    }\n\n    render() {\n        return (\n            <></>\n        )\n    }\n}","import React from \"react\"\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nexport class FlashCue extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.wait = 0 + props.additionalWait\n        this.startShowingFlash = this.startShowingFlash.bind(this)\n        this.zIndex = props.zIndex\n        this.state = {\n            g: props.g,\n            flashStarted: false\n        }\n    }\n\n    startShowingFlash() {\n        this.setState({ flashStarted: true })\n        const setBoolFlashCueShown = () => this.state.g.updateState({ flashCueShown: true })\n        this.timer = setTimeout(setBoolFlashCueShown, this.wait/2)\n    }\n\n    componentDidMount() {\n        if (!this.state.g.flashCueShown) {\n            this.timer = setTimeout(this.startShowingFlash, this.wait)\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearTimeout(this.timer)\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.state.flashStarted && (\n                    <>\n                        <FaArrowLeft className=\"flashCue\" style={{ left: \"10vw\" }} />\n                        <FaArrowRight className=\"flashCue\" style={{ right: \"10vw\" }} />\n                    \n                        <style jsx>{`\n                            :global(.flashCue) {\n                                top: 50%;\n                                transform: translateY(-50%);\n                            \n                                opacity: 0;\n                                font-size: 20px;\n                                animation: flash 4s linear;\n                                z-index: ${this.zIndex};\n                            }\n\n                            @media only screen and (max-width: 1200px) {\n                                @keyframes flash {\n                                    0%, 100% {\n                                        opacity: 0;\n                                        transform: scale(1);\n                                        -webkit-filter: blur(3px);\n                                        -moz-filter: blur(3px);\n                                        -o-filter: blur(3px);\n                                        -ms-filter: blur(3px); \n                                        filter: blur(3px);\n                                        filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='3');\n                                    }\n                                    50% {\n                                        opacity: 1;\n                                        transform: scale(2);\n                                        -webkit-filter: blur(0px);\n                                        -moz-filter: blur(0px);\n                                        -o-filter: blur(0px);\n                                        -ms-filter: blur(0px); \n                                        filter: blur(0px);\n                                        filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='0');\n                                    }\n                                }\n                            }\n\n                            \n                        `}</style>\n                    </>\n                )}\n            </>\n        )\n    }\n}","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, navigate } from \"gatsby\"\nimport theme from \"../theme.yaml\"\nimport { FaTimesCircle, FaArrowLeft, FaArrowRight, FaExpand, FaCompress, FaDownload } from 'react-icons/fa';\nimport { GlobalStateContext } from \"../components/globalState.js\"\nimport { CornerCaseHandler } from \"../components/cornerCaseHandler.js\"\nimport { enterFullScreen, exitFullScreen } from \"../util/fullScreenHelpers.js\"\nimport { FlashCue } from \"../components/flashCue.js\"\n\nclass PostcardTemplate extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.fullScreenChangeHandler = this.fullScreenChangeHandler.bind(this)\n    this.enterFullScreenAndRender = this.enterFullScreenAndRender.bind(this)\n    this.exitFullScreenAndRender = this.exitFullScreenAndRender.bind(this)\n    this.currentImageLoaded = this.currentImageLoaded.bind(this)\n    this.nextImageLoaded = this.nextImageLoaded.bind(this)\n    this.prevImageLoaded = this.prevImageLoaded.bind(this)\n    this.getStatePassForNext = this.getStatePassForNext.bind(this)\n    this.getStatePassForPrev = this.getStatePassForPrev.bind(this)\n\n    /* Magic numbers. */\n    this.placeholderTransitionDuration = 1000\n    this.zIndexes = this.zIndexes()\n\n    this.state = {\n      pageContext: this.getFromPassedStateOrDefault(\"pageContext\", this.props.pageContext), /* Explained in README. */\n      currentImageLoaded: this.getFromPassedStateOrDefault(\"currentImageLoaded\", false),\n      isFullScreen: this.getFromPassedStateOrDefault(\"isFullScreen\", false),\n      nextImageLoaded: this.getFromPassedStateOrDefault(\"nextImageLoaded\", false),\n      prevImageLoaded: this.getFromPassedStateOrDefault(\"prevImageLoaded\", false)\n    }\n  }\n\n  getFromPassedStateOrDefault(key, defaultVal = false) {\n    if (!this.props.location || !this.props.location.state || !this.props.location.state[key]) return defaultVal\n    return this.props.location.state[key]\n  }\n\n  zIndexes() {\n    /* Doing it like this to reduce hidden dependencies. */\n    const z = {}\n    var next = 1\n    z[\"prefetchedImages\"] = next++\n    z[\"currentImagePlaceholder\"] = next++\n    z[\"currentImage\"] = next++\n    z[\"flashCue\"] = next++\n    z[\"invisibleLinks\"] = next++\n    z[\"navButtons\"] = next++\n    return z\n  }\n\n  enterFullScreenAndRender() {\n    enterFullScreen()\n    this.setState({\n      /* Re-render with the correct toggle icon. */\n      isFullScreen: true\n    })\n  }\n\n  exitFullScreenAndRender() {\n    exitFullScreen()\n    this.setState({\n      /* Re-render with the correct toggle icon. */\n      isFullScreen: false\n    })\n  }\n\n  fullScreenChangeHandler() {\n    /* This exists to detect changes in full screen initiated with browser functions (as opposed to our fullscreen icon).\n     * Note that we still need functions enterFullScreenAndRender and exitFullScreenAndRender.\n     * Even though this does the same thing, devices are usually slow to enter/exit full screen mode,\n     * so if we immediately render a change in icon, the user doesn't feel like something is broken. */\n    if (!document) return\n    if (!document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n      this.exitFullScreenAndRender()\n    } else {\n      this.enterFullScreenAndRender()\n    }\n  }\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === 37) {\n      /* Left arrow. */\n      navigate(`/images/${this.state.pageContext.prevId}`, { state: this.getStatePassForPrev() })\n    } else if (event.keyCode === 39) {\n      /* Right arrow. */\n      navigate(`/images/${this.state.pageContext.nextId}`, { state: this.getStatePassForNext() })\n    }\n  }\n\n  useOfQueryParams() {\n    return typeof window !== 'undefined' && window && window.location.href.includes(\"/images/fromGallery?id=\")\n  }\n\n  componentDidMount() {\n    /* Keyboard listener for arrow key navigation. */\n    if (typeof document !== 'undefined' && document.addEventListener && this.state.pageContext) {\n      document.addEventListener(\"keydown\", this.handleKeyDown)\n    }\n\n    /* Fullscreen change listener to detect when user presses ESC to exit fullscreen. */\n    if (typeof document !== 'undefined' && document.addEventListener) {\n      document.addEventListener('webkitfullscreenchange', this.fullScreenChangeHandler, false);\n      document.addEventListener('mozfullscreenchange', this.fullScreenChangeHandler, false);\n      document.addEventListener('fullscreenchange', this.fullScreenChangeHandler, false);\n      document.addEventListener('MSFullscreenChange', this.fullScreenChangeHandler, false);\n    }\n  }\n\n  componentWillMount() {\n     if (this.useOfQueryParams() && !this.getFromPassedStateOrDefault(\"pageContext\")) {\n      /* Safeguard against the (unlikely) case where someone uses /images/fromGallery?id=... as an entry-point to the site. */\n      const id = window.location.href.split(\"/images/fromGallery?id=\")[1]\n      navigate(\n        `/images/${id}`,\n        {\n          replace: true\n        }\n      )\n    }\n  }\n\n  currentImageLoaded() {\n    /* Trigger re-render, start possible transition. */\n    this.setState({\n      currentImageLoaded: true\n    })\n  }\n\n  nextImageLoaded() {\n    this.setState({\n      nextImageLoaded: true\n    })\n  }\n\n  prevImageLoaded() {\n    this.setState({\n      prevImageLoaded: true\n    })\n  }\n\n  componentWillUnmount() {\n    if (this.timer1) {\n      clearTimeout(this.timer1)\n    }\n    if (this.timer2) {\n      clearTimeout(this.timer2)\n    }\n    if (typeof document !== 'undefined' && document.removeEventListener) {\n      document.removeEventListener(\"keydown\", this.handleKeyDown)\n      document.removeEventListener('webkitfullscreenchange', this.fullScreenChangeHandler, false);\n      document.removeEventListener('mozfullscreenchange', this.fullScreenChangeHandler, false);\n      document.removeEventListener('fullscreenchange', this.fullScreenChangeHandler, false);\n      document.removeEventListener('MSFullscreenChange', this.fullScreenChangeHandler, false);\n    }\n  }\n\n  getStatePassForNext() {\n    return {\n      isFullScreen: this.state.isFullScreen,\n      currentImageLoaded: this.state.nextImageLoaded,\n      prevImageLoaded: this.state.currentImageLoaded\n    }\n  }\n\n  getStatePassForPrev() {\n    return {\n      isFullScreen: this.state.isFullScreen,\n      currentImageLoaded: this.state.prevImageLoaded,\n      nextImageLoaded: this.state.currentImageLoaded\n    }\n  }\n\n  render () {\n    const c = this.state.pageContext\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{`Photo from Gatsby Starter Photo Book` /* Note: not a good idea to put image id here (needs JS to render the correct id). */}</title>\n          \n          <style>\n            {/* \n                Set some CSS attributes into html and body tags of this page.\n                We do this here because a Gatsby bug prevents us from doing it the clean way\n                (which would be: using separate CSS files for setting separate html/body attributes to different pages).\n            */}\n            {`\n              html {\n                height: 100%;\n                overflow-y: hidden !important;\n                overflow-x: hidden !important;\n              }\n              body {\n                height: 100%;\n                background-color: #fcf7e9;\n                margin: 0 0 0 0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='180' height='180' viewBox='0 0 180 180' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M81.28 88H68.413l19.298 19.298L81.28 88zm2.107 0h13.226L90 107.838 83.387 88zm15.334 0h12.866l-19.298 19.298L98.72 88zm-32.927-2.207L73.586 78h32.827l.5.5 7.294 7.293L115.414 87l-24.707 24.707-.707.707L64.586 87l1.207-1.207zm2.62.207L74 80.414 79.586 86H68.414zm16 0L90 80.414 95.586 86H84.414zm16 0L106 80.414 111.586 86h-11.172zm-8-6h11.173L98 85.586 92.414 80zM82 85.586L87.586 80H76.414L82 85.586zM17.414 0L.707 16.707 0 17.414V0h17.414zM4.28 0L0 12.838V0h4.28zm10.306 0L2.288 12.298 6.388 0h8.198zM180 17.414L162.586 0H180v17.414zM165.414 0l12.298 12.298L173.612 0h-8.198zM180 12.838L175.72 0H180v12.838zM0 163h16.413l.5.5 7.294 7.293L25.414 172l-8 8H0v-17zm0 10h6.613l-2.334 7H0v-7zm14.586 7l7-7H8.72l-2.333 7h8.2zM0 165.414L5.586 171H0v-5.586zM10.414 171L16 165.414 21.586 171H10.414zm-8-6h11.172L8 170.586 2.414 165zM180 163h-16.413l-7.794 7.793-1.207 1.207 8 8H180v-17zm-14.586 17l-7-7h12.865l2.333 7h-8.2zM180 173h-6.613l2.334 7H180v-7zm-21.586-2l5.586-5.586 5.586 5.586h-11.172zM180 165.414L174.414 171H180v-5.586zm-8 5.172l5.586-5.586h-11.172l5.586 5.586zM152.933 25.653l1.414 1.414-33.94 33.942-1.416-1.416 33.943-33.94zm1.414 127.28l-1.414 1.414-33.942-33.94 1.416-1.416 33.94 33.943zm-127.28 1.414l-1.414-1.414 33.94-33.942 1.416 1.416-33.943 33.94zm-1.414-127.28l1.414-1.414 33.942 33.94-1.416 1.416-33.94-33.943zM0 85c2.21 0 4 1.79 4 4s-1.79 4-4 4v-8zm180 0c-2.21 0-4 1.79-4 4s1.79 4 4 4v-8zM94 0c0 2.21-1.79 4-4 4s-4-1.79-4-4h8zm0 180c0-2.21-1.79-4-4-4s-4 1.79-4 4h8z' fill='%239C92AC' fill-opacity='0.08' fill-rule='evenodd'/%3E%3C/svg%3E\");\n              }\n              * {\n                -webkit-tap-highlight-color: transparent !important;\n                outline: none !important;\n              }\n              #gatsby-noscript {\n                display: none;\n              }\n\n            `}\n          </style>\n        </Helmet>\n        <GlobalStateContext.Consumer>\n          {globalState => (\n              <>\n                  <CornerCaseHandler g={globalState} currId={c.image.id} nextId={c.nextId} />\n\n                  {/* Invisible helper links for prev/next navigation: clicking left side of the viewport links to prev, right side to next. */}\n                  <Link to={`/images/${c.prevId}`} state={this.getStatePassForPrev()} title={c.image.title} >\n                        <span style={{ position: \"fixed\", height: \"100%\", width: \"50%\", left: \"0px\", zIndex: this.zIndexes[\"invisibleLinks\"] }}></span>\n                  </Link>\n                  <Link to={`/images/${c.nextId}`} state={this.getStatePassForNext()} title={c.image.title} >\n                        <span style={{ position: \"fixed\", height: \"100%\", width: \"50%\", right: \"0px\", zIndex: this.zIndexes[\"invisibleLinks\"] }}></span>\n                  </Link>\n\n                  {/* Navbuttons: prev/next (even though clicking anywhere on the page works, we want to help the user understand what they can do). */}\n                  <Link to={`/images/${c.prevId}`} state={this.getStatePassForPrev()} >\n                    <FaArrowLeft className=\"arrowButtons\" style={{ left: \"10px\", top: \"50%\", transform: \"translateY(-50%)\" }} title=\"Previous photo\" />\n                  </Link>\n                  <Link to={`/images/${c.nextId}`} state={this.getStatePassForNext()} >\n                    <FaArrowRight className=\"arrowButtons\" style={{ right: \"10px\", top: \"50%\", transform: \"translateY(-50%)\" }} title=\"Next photo\" />\n                  </Link>\n\n                  {/* Flash cues for small screens instead of sticking prev/next buttons. */}\n                  {this.state.currentImageLoaded && (\n                    <FlashCue g={globalState} additionalWait={this.placeholderTransitionDuration} zIndex={this.zIndexes[\"flashCue\"]} />\n                  )}\n                 \n                  {/* Navbutton: Top right 'x' to 'close' the image and return to gallery. */}\n                  <span className=\"x\">\n                    <Link to={`/#id${c.image.id}`} state={{ highlight: c.image.id }} title=\"Back to Gallery\" >\n                      <FaTimesCircle style={{ right: \"10px\", top: \"10px\" }} />\n                    </Link>\n                  </span>\n\n                  {/* Navbutton: Fullscreen toggle. */}\n                  <span className=\"fullscreen\">\n                    {this.state.isFullScreen && (\n                      <FaCompress style={{ right: \"10px\", bottom: \"10px\", cursor: \"pointer\" }} title=\"Exit full screen mode\" onClick={this.exitFullScreenAndRender} />\n                    )}\n                    {!this.state.isFullScreen && (\n                      <FaExpand style={{ right: \"10px\", bottom: \"10px\", cursor: \"pointer\" }} title=\"Enter full screen mode\" onClick={this.enterFullScreenAndRender} />\n                    )}\n                  </span>\n\n                  {/* Navbutton: Download image. */}\n                  <span className=\"download\">\n                    <a href={c.image.fluid.originalImg} download >\n                      <FaDownload style={{ right: \"80px\", bottom: \"12px\" }} title=\"Download photo\" />\n                    </a>\n                  </span>\n\n                  {/* Current image.\n                    *     Includes a workaround to guarantee onLoad firing.\n                    *     The issue:\n                    *            If the image is already in cache, the browser may not fire onLoad event.\n                    *            Occurs on initial load only, not with subsequent SPA navigation.\n                    *     The workaround:\n                    *            During the initial render we add the img to DOM with onLoad but without src properties.\n                    *            Then we immediately re-render with the added src properties, causing onLoad to fire\n                    *            even if the images are found in cache. */}\n                  <img\n                    className={`currentImage decoratedImage ${this.state.currentImageLoaded ? \"fade-in\" : \"hide\"}`}\n                    onLoad={this.currentImageLoaded}\n                    src={globalState.initialRender ? \"\" : c.image.fluid.originalImg} /* Workaround for onload firing. */\n                    srcSet={globalState.initialRender ? \"\" : c.image.fluid.srcSet} /* Workaround for onload firing. */\n                    sizes={globalState.initialRender ? \"\" : c.image.fluid.sizes} /* Workaround for onload firing. */\n                    alt=\"\"\n                    title={c.image.title}\n                    importance=\"high\" /* Resource prioritization hint. */\n                    style={{ zIndex: this.zIndexes[\"currentImage\"] }}\n                  />\n\n                  {/* Placeholder: If current image is not ready, display placeholder until current image has loaded, then transition. */}\n                  <img\n                    className={`currentImagePlaceholder ${this.state.currentImageLoaded ? \"fade-out\" : \"\"}`}\n                    src={c.image.fluid.tracedSVG}\n                    alt=\"\"\n                    style={{ zIndex: this.zIndexes[\"currentImagePlaceholder\"], height: \"1337%\", borderRadius: \"0px\" }}\n                  />\n\n                  {/* Fallback: If JS is disabled, degrade gracefully from placeholder-transition to just-show-current-image. */}\n                  <noscript>\n                      <img\n                        className=\"currentImage decoratedImage\"\n                        src={c.image.fluid.originalImg}\n                        srcSet={c.image.fluid.srcSet}\n                        sizes={c.image.fluid.sizes}\n                        alt=\"\"\n                        title={c.image.title}\n                        importance=\"high\"\n                        style={{ zIndex: this.zIndexes[\"currentImage\"] }}\n                      />\n                      <style>{`\n                        .currentImagePlaceholder {\n                          opacity: 0 !important\n                        }\n                      `}</style>\n                  </noscript>\n\n                  {/* Preload adjacent images (hide with CSS).\n                    *     Why like this, and not with link rel prefetch?\n                    *     1. link rel prefetch sometimes eats bandwidth from current image.\n                    *     2. link rel prefetch can not be used with srcSet. */}\n                  {this.state.currentImageLoaded && (\n                    <>\n                      <img\n                        onLoad={this.nextImageLoaded}\n                        className=\"prefetchedImages\"\n                        src={globalState.initialRender ? \"\" : c.prefetchNext1.originalImg} /* Workaround for onload firing. */\n                        srcSet={globalState.initialRender ? \"\" : c.prefetchNext1.srcSet} /* Workaround for onload firing. */\n                        sizes={globalState.initialRender ? \"\" : c.prefetchNext1.sizes} /* Workaround for onload firing. */\n                        alt=\"\"\n                        importance=\"low\"\n                      />\n                      <img\n                        onLoad={this.prevImageLoaded}\n                        className=\"prefetchedImages\"\n                        src={globalState.initialRender ? \"\" : c.prefetchPrev.originalImg} /* Workaround for onload firing. */\n                        srcSet={globalState.initialRender ? \"\" : c.prefetchPrev.srcSet} /* Workaround for onload firing. */\n                        sizes={globalState.initialRender ? \"\" : c.prefetchPrev.sizes} /* Workaround for onload firing. */\n                        alt=\"\"\n                        importance=\"low\"\n                      />\n                      <img\n                        className=\"prefetchedImages\"\n                        src={c.prefetchNext2.originalImg} /* No onLoad event attached so no need for workaround here. */\n                        srcSet={c.prefetchNext2.srcSet}\n                        sizes={c.prefetchNext2.sizes}\n                        alt=\"\"\n                        importance=\"low\"\n                      />\n                    </>\n                  )}\n\n                  <style jsx>\n                    {`\n\n                        img {\n                          position: absolute;\n                          margin-left: auto;\n                          margin-right: auto;\n                          margin-top: auto;\n                          margin-bottom: auto;\n                          padding: 0;\n\n                          left: 5%;\n                          right: 5%;\n                          top: 3%;\n                          bottom: 3%;\n                          max-height: 94%;\n                          max-width: 90%;\n\n                          @media only screen and (max-width: 1200px) {\n                            left: 0px;\n                            right: 0px;\n                            top: 0px;\n                            bottom: 0px;\n                            max-height: 100%;\n                            max-width: 100%;\n\n                            -webkit-box-shadow: 0 0 0 0 !important;\n                            -moz-box-shadow: 0 0 0 0 !important;\n                            box-shadow: 0 0 0 0 !important;\n                          }\n\n                        }\n\n                        .decoratedImage {\n                          -webkit-box-shadow: 1vw 1vh 5vh 0px rgba(0,0,0,0.75);\n                          -moz-box-shadow: 1vw 1vh 5vh 0px rgba(0,0,0,0.75);\n                          box-shadow: 1vw 1vh 5vh 0px rgba(0,0,0,0.75);\n                          border-radius: 8px;\n                        }\n\n                        .hide {\n                          opacity: 0;\n                        }\n\n                        .fade-in {\n                          opacity: 1;\n                          transition: ${this.placeholderTransitionDuration}ms ease-in;\n                        }\n\n                        .fade-out {\n                          opacity: 0;\n                          transition: ${this.placeholderTransitionDuration}ms step-end;\n                        }\n\n                        .prefetchedImages {\n                          opacity: 0;\n                          z-index: ${this.zIndexes[\"prefetchedImages\"]}\n                        }\n\n                        :global(.arrowButtons) {\n                          @media only screen and (max-width: 1200px) {\n                            visibility: hidden;\n                          }\n                        }\n\n                        :global(svg) {\n                          position: fixed;\n                          font-size: 40px;\n                          fill: ${theme.color.brand.primary};\n                          opacity: 0.5;\n                          z-index: ${this.zIndexes[\"navButtons\"]}\n                        }\n\n                        :global(svg):hover {\n                          opacity: 1;\n                        }\n                        \n                    `}\n                  </style>\n              </>\n        )}</GlobalStateContext.Consumer>\n      </>\n    )\n  }\n}\n\n\nexport default PostcardTemplate\n"],"sourceRoot":""}